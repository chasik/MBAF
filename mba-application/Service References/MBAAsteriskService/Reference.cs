//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mba_application.MBAAsteriskService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MBAAsteriskService.IAsteriskService")]
    public interface IAsteriskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsteriskService/DoWork", ReplyAction="http://tempuri.org/IAsteriskService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAsteriskService/DoWork", ReplyAction="http://tempuri.org/IAsteriskService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAsteriskService/GetAllSipPeers", ReplyAction="http://tempuri.org/IAsteriskService/GetAllSipPeersResponse")]
        mba_model.AsteriskSipPeer[] GetAllSipPeers();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAsteriskService/GetAllSipPeers", ReplyAction="http://tempuri.org/IAsteriskService/GetAllSipPeersResponse")]
        System.IAsyncResult BeginGetAllSipPeers(System.AsyncCallback callback, object asyncState);
        
        mba_model.AsteriskSipPeer[] EndGetAllSipPeers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAsteriskServiceChannel : mba_application.MBAAsteriskService.IAsteriskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllSipPeersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllSipPeersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public mba_model.AsteriskSipPeer[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((mba_model.AsteriskSipPeer[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AsteriskServiceClient : System.ServiceModel.ClientBase<mba_application.MBAAsteriskService.IAsteriskService>, mba_application.MBAAsteriskService.IAsteriskService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllSipPeersDelegate;
        
        private EndOperationDelegate onEndGetAllSipPeersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllSipPeersCompletedDelegate;
        
        public AsteriskServiceClient() {
        }
        
        public AsteriskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AsteriskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AsteriskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AsteriskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetAllSipPeersCompletedEventArgs> GetAllSipPeersCompleted;
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            this.EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        public mba_model.AsteriskSipPeer[] GetAllSipPeers() {
            return base.Channel.GetAllSipPeers();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllSipPeers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllSipPeers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public mba_model.AsteriskSipPeer[] EndGetAllSipPeers(System.IAsyncResult result) {
            return base.Channel.EndGetAllSipPeers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllSipPeers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllSipPeers(callback, asyncState);
        }
        
        private object[] OnEndGetAllSipPeers(System.IAsyncResult result) {
            mba_model.AsteriskSipPeer[] retVal = this.EndGetAllSipPeers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllSipPeersCompleted(object state) {
            if ((this.GetAllSipPeersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllSipPeersCompleted(this, new GetAllSipPeersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllSipPeersAsync() {
            this.GetAllSipPeersAsync(null);
        }
        
        public void GetAllSipPeersAsync(object userState) {
            if ((this.onBeginGetAllSipPeersDelegate == null)) {
                this.onBeginGetAllSipPeersDelegate = new BeginOperationDelegate(this.OnBeginGetAllSipPeers);
            }
            if ((this.onEndGetAllSipPeersDelegate == null)) {
                this.onEndGetAllSipPeersDelegate = new EndOperationDelegate(this.OnEndGetAllSipPeers);
            }
            if ((this.onGetAllSipPeersCompletedDelegate == null)) {
                this.onGetAllSipPeersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllSipPeersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllSipPeersDelegate, null, this.onEndGetAllSipPeersDelegate, this.onGetAllSipPeersCompletedDelegate, userState);
        }
    }
}
