//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mba_application.MBAPermissionsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionsType", Namespace="http://schemas.datacontract.org/2004/07/mba_services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PermissionsType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MBAPermissionsService.IPermissionsService")]
    public interface IPermissionsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermissionsService/GetPermissions", ReplyAction="http://tempuri.org/IPermissionsService/GetPermissionsResponse")]
        mba_application.MBAPermissionsService.PermissionsType GetPermissions();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPermissionsService/GetPermissions", ReplyAction="http://tempuri.org/IPermissionsService/GetPermissionsResponse")]
        System.IAsyncResult BeginGetPermissions(System.AsyncCallback callback, object asyncState);
        
        mba_application.MBAPermissionsService.PermissionsType EndGetPermissions(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPermissionsServiceChannel : mba_application.MBAPermissionsService.IPermissionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public mba_application.MBAPermissionsService.PermissionsType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((mba_application.MBAPermissionsService.PermissionsType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermissionsServiceClient : System.ServiceModel.ClientBase<mba_application.MBAPermissionsService.IPermissionsService>, mba_application.MBAPermissionsService.IPermissionsService {
        
        private BeginOperationDelegate onBeginGetPermissionsDelegate;
        
        private EndOperationDelegate onEndGetPermissionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetPermissionsCompletedDelegate;
        
        public PermissionsServiceClient() {
        }
        
        public PermissionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermissionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermissionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPermissionsCompletedEventArgs> GetPermissionsCompleted;
        
        public mba_application.MBAPermissionsService.PermissionsType GetPermissions() {
            return base.Channel.GetPermissions();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPermissions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPermissions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public mba_application.MBAPermissionsService.PermissionsType EndGetPermissions(System.IAsyncResult result) {
            return base.Channel.EndGetPermissions(result);
        }
        
        private System.IAsyncResult OnBeginGetPermissions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetPermissions(callback, asyncState);
        }
        
        private object[] OnEndGetPermissions(System.IAsyncResult result) {
            mba_application.MBAPermissionsService.PermissionsType retVal = this.EndGetPermissions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPermissionsCompleted(object state) {
            if ((this.GetPermissionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPermissionsCompleted(this, new GetPermissionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPermissionsAsync() {
            this.GetPermissionsAsync(null);
        }
        
        public void GetPermissionsAsync(object userState) {
            if ((this.onBeginGetPermissionsDelegate == null)) {
                this.onBeginGetPermissionsDelegate = new BeginOperationDelegate(this.OnBeginGetPermissions);
            }
            if ((this.onEndGetPermissionsDelegate == null)) {
                this.onEndGetPermissionsDelegate = new EndOperationDelegate(this.OnEndGetPermissions);
            }
            if ((this.onGetPermissionsCompletedDelegate == null)) {
                this.onGetPermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetPermissionsDelegate, null, this.onEndGetPermissionsDelegate, this.onGetPermissionsCompletedDelegate, userState);
        }
    }
}
