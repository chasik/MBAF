//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mba_application.MBAImportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodColumnDC", Namespace="http://schemas.datacontract.org/2004/07/mba_services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GoodColumnDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodColumnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodColumnNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodColumnId {
            get {
                return this.GoodColumnIdField;
            }
            set {
                if ((this.GoodColumnIdField.Equals(value) != true)) {
                    this.GoodColumnIdField = value;
                    this.RaisePropertyChanged("GoodColumnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodColumnName {
            get {
                return this.GoodColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodColumnNameField, value) != true)) {
                    this.GoodColumnNameField = value;
                    this.RaisePropertyChanged("GoodColumnName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodColumn", Namespace="http://schemas.datacontract.org/2004/07/mba_model")]
    [System.SerializableAttribute()]
    public partial class GoodColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private mba_application.MBAImportService.ColumnHeader[] ColumnHeadersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public mba_application.MBAImportService.ColumnHeader[] ColumnHeaders {
            get {
                return this.ColumnHeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnHeadersField, value) != true)) {
                    this.ColumnHeadersField = value;
                    this.RaisePropertyChanged("ColumnHeaders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColumnHeader", Namespace="http://schemas.datacontract.org/2004/07/mba_model")]
    [System.SerializableAttribute()]
    public partial class ColumnHeader : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private mba_application.MBAImportService.GoodColumn GoodColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodColumnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public mba_application.MBAImportService.GoodColumn GoodColumn {
            get {
                return this.GoodColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodColumnField, value) != true)) {
                    this.GoodColumnField = value;
                    this.RaisePropertyChanged("GoodColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodColumnId {
            get {
                return this.GoodColumnIdField;
            }
            set {
                if ((this.GoodColumnIdField.Equals(value) != true)) {
                    this.GoodColumnIdField = value;
                    this.RaisePropertyChanged("GoodColumnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodColumnAddRelationParamDC", Namespace="http://schemas.datacontract.org/2004/07/mba_services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GoodColumnAddRelationParamDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private mba_application.MBAImportService.GoodColumnDC GoodColumnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnHeader {
            get {
                return this.ColumnHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnHeaderField, value) != true)) {
                    this.ColumnHeaderField = value;
                    this.RaisePropertyChanged("ColumnHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public mba_application.MBAImportService.GoodColumnDC GoodColumn {
            get {
                return this.GoodColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodColumnField, value) != true)) {
                    this.GoodColumnField = value;
                    this.RaisePropertyChanged("GoodColumn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GoodColumnAddRelationParamDC", Namespace="http://schemas.datacontract.org/2004/07/mba_services.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GoodColumnAddRelationParamDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private mba_application.MBAImportService.GoodColumnDC GoodColumnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnHeader {
            get {
                return this.ColumnHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnHeaderField, value) != true)) {
                    this.ColumnHeaderField = value;
                    this.RaisePropertyChanged("ColumnHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public mba_application.MBAImportService.GoodColumnDC GoodColumn {
            get {
                return this.GoodColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodColumnField, value) != true)) {
                    this.GoodColumnField = value;
                    this.RaisePropertyChanged("GoodColumn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MBAImportService.IImportService")]
    public interface IImportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImportService/GetGoodColumn", ReplyAction="http://tempuri.org/IImportService/GetGoodColumnResponse")]
        mba_application.MBAImportService.GoodColumnDC GetGoodColumn(string columnHeader);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IImportService/GetGoodColumn", ReplyAction="http://tempuri.org/IImportService/GetGoodColumnResponse")]
        System.IAsyncResult BeginGetGoodColumn(string columnHeader, System.AsyncCallback callback, object asyncState);
        
        mba_application.MBAImportService.GoodColumnDC EndGetGoodColumn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImportService/GoodColumns", ReplyAction="http://tempuri.org/IImportService/GoodColumnsResponse")]
        mba_application.MBAImportService.GoodColumn[] GoodColumns();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IImportService/GoodColumns", ReplyAction="http://tempuri.org/IImportService/GoodColumnsResponse")]
        System.IAsyncResult BeginGoodColumns(System.AsyncCallback callback, object asyncState);
        
        mba_application.MBAImportService.GoodColumn[] EndGoodColumns(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImportService/AddGoodColumnRelation", ReplyAction="http://tempuri.org/IImportService/AddGoodColumnRelationResponse")]
        bool AddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IImportService/AddGoodColumnRelation", ReplyAction="http://tempuri.org/IImportService/AddGoodColumnRelationResponse")]
        System.IAsyncResult BeginAddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param, System.AsyncCallback callback, object asyncState);
        
<<<<<<< HEAD
=======
        mba_application.MBAImportService.GoodColumnsListDC EndGetGoodColumnList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImportService/AddGoodColumnRelation", ReplyAction="http://tempuri.org/IImportService/AddGoodColumnRelationResponse")]
        bool AddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IImportService/AddGoodColumnRelation", ReplyAction="http://tempuri.org/IImportService/AddGoodColumnRelationResponse")]
        System.IAsyncResult BeginAddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param, System.AsyncCallback callback, object asyncState);
        
>>>>>>> 6ffeacc5dd44d3de79ee0143d8c9452c1a7cc2bb
        bool EndAddGoodColumnRelation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImportServiceChannel : mba_application.MBAImportService.IImportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGoodColumnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGoodColumnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public mba_application.MBAImportService.GoodColumnDC Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((mba_application.MBAImportService.GoodColumnDC)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GoodColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GoodColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public mba_application.MBAImportService.GoodColumn[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((mba_application.MBAImportService.GoodColumn[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddGoodColumnRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddGoodColumnRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddGoodColumnRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddGoodColumnRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImportServiceClient : System.ServiceModel.ClientBase<mba_application.MBAImportService.IImportService>, mba_application.MBAImportService.IImportService {
        
        private BeginOperationDelegate onBeginGetGoodColumnDelegate;
        
        private EndOperationDelegate onEndGetGoodColumnDelegate;
        
        private System.Threading.SendOrPostCallback onGetGoodColumnCompletedDelegate;
        
        private BeginOperationDelegate onBeginGoodColumnsDelegate;
        
        private EndOperationDelegate onEndGoodColumnsDelegate;
        
        private System.Threading.SendOrPostCallback onGoodColumnsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddGoodColumnRelationDelegate;
        
        private EndOperationDelegate onEndAddGoodColumnRelationDelegate;
        
        private System.Threading.SendOrPostCallback onAddGoodColumnRelationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddGoodColumnRelationDelegate;
        
        private EndOperationDelegate onEndAddGoodColumnRelationDelegate;
        
        private System.Threading.SendOrPostCallback onAddGoodColumnRelationCompletedDelegate;
        
        public ImportServiceClient() {
        }
        
        public ImportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetGoodColumnCompletedEventArgs> GetGoodColumnCompleted;
        
        public event System.EventHandler<GoodColumnsCompletedEventArgs> GoodColumnsCompleted;
        
        public event System.EventHandler<AddGoodColumnRelationCompletedEventArgs> AddGoodColumnRelationCompleted;
        
        public event System.EventHandler<AddGoodColumnRelationCompletedEventArgs> AddGoodColumnRelationCompleted;
        
        public mba_application.MBAImportService.GoodColumnDC GetGoodColumn(string columnHeader) {
            return base.Channel.GetGoodColumn(columnHeader);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetGoodColumn(string columnHeader, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGoodColumn(columnHeader, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public mba_application.MBAImportService.GoodColumnDC EndGetGoodColumn(System.IAsyncResult result) {
            return base.Channel.EndGetGoodColumn(result);
        }
        
        private System.IAsyncResult OnBeginGetGoodColumn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string columnHeader = ((string)(inValues[0]));
            return this.BeginGetGoodColumn(columnHeader, callback, asyncState);
        }
        
        private object[] OnEndGetGoodColumn(System.IAsyncResult result) {
            mba_application.MBAImportService.GoodColumnDC retVal = this.EndGetGoodColumn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGoodColumnCompleted(object state) {
            if ((this.GetGoodColumnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGoodColumnCompleted(this, new GetGoodColumnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGoodColumnAsync(string columnHeader) {
            this.GetGoodColumnAsync(columnHeader, null);
        }
        
        public void GetGoodColumnAsync(string columnHeader, object userState) {
            if ((this.onBeginGetGoodColumnDelegate == null)) {
                this.onBeginGetGoodColumnDelegate = new BeginOperationDelegate(this.OnBeginGetGoodColumn);
            }
            if ((this.onEndGetGoodColumnDelegate == null)) {
                this.onEndGetGoodColumnDelegate = new EndOperationDelegate(this.OnEndGetGoodColumn);
            }
            if ((this.onGetGoodColumnCompletedDelegate == null)) {
                this.onGetGoodColumnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGoodColumnCompleted);
            }
            base.InvokeAsync(this.onBeginGetGoodColumnDelegate, new object[] {
                        columnHeader}, this.onEndGetGoodColumnDelegate, this.onGetGoodColumnCompletedDelegate, userState);
        }
        
        public mba_application.MBAImportService.GoodColumn[] GoodColumns() {
            return base.Channel.GoodColumns();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGoodColumns(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGoodColumns(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public mba_application.MBAImportService.GoodColumn[] EndGoodColumns(System.IAsyncResult result) {
            return base.Channel.EndGoodColumns(result);
        }
        
        private System.IAsyncResult OnBeginGoodColumns(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGoodColumns(callback, asyncState);
        }
        
        private object[] OnEndGoodColumns(System.IAsyncResult result) {
            mba_application.MBAImportService.GoodColumn[] retVal = this.EndGoodColumns(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGoodColumnsCompleted(object state) {
            if ((this.GoodColumnsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GoodColumnsCompleted(this, new GoodColumnsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GoodColumnsAsync() {
            this.GoodColumnsAsync(null);
        }
        
        public void GoodColumnsAsync(object userState) {
            if ((this.onBeginGoodColumnsDelegate == null)) {
                this.onBeginGoodColumnsDelegate = new BeginOperationDelegate(this.OnBeginGoodColumns);
            }
            if ((this.onEndGoodColumnsDelegate == null)) {
                this.onEndGoodColumnsDelegate = new EndOperationDelegate(this.OnEndGoodColumns);
            }
            if ((this.onGoodColumnsCompletedDelegate == null)) {
                this.onGoodColumnsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGoodColumnsCompleted);
            }
            base.InvokeAsync(this.onBeginGoodColumnsDelegate, null, this.onEndGoodColumnsDelegate, this.onGoodColumnsCompletedDelegate, userState);
        }
        
        public bool AddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param) {
            return base.Channel.AddGoodColumnRelation(param);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddGoodColumnRelation(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddGoodColumnRelation(System.IAsyncResult result) {
            return base.Channel.EndAddGoodColumnRelation(result);
        }
        
        private System.IAsyncResult OnBeginAddGoodColumnRelation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            mba_application.MBAImportService.GoodColumnAddRelationParamDC param = ((mba_application.MBAImportService.GoodColumnAddRelationParamDC)(inValues[0]));
            return this.BeginAddGoodColumnRelation(param, callback, asyncState);
        }
        
        private object[] OnEndAddGoodColumnRelation(System.IAsyncResult result) {
            bool retVal = this.EndAddGoodColumnRelation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddGoodColumnRelationCompleted(object state) {
            if ((this.AddGoodColumnRelationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddGoodColumnRelationCompleted(this, new AddGoodColumnRelationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddGoodColumnRelationAsync(mba_application.MBAImportService.GoodColumnAddRelationParamDC param) {
            this.AddGoodColumnRelationAsync(param, null);
        }
        
        public void AddGoodColumnRelationAsync(mba_application.MBAImportService.GoodColumnAddRelationParamDC param, object userState) {
            if ((this.onBeginAddGoodColumnRelationDelegate == null)) {
                this.onBeginAddGoodColumnRelationDelegate = new BeginOperationDelegate(this.OnBeginAddGoodColumnRelation);
            }
            if ((this.onEndAddGoodColumnRelationDelegate == null)) {
                this.onEndAddGoodColumnRelationDelegate = new EndOperationDelegate(this.OnEndAddGoodColumnRelation);
            }
            if ((this.onAddGoodColumnRelationCompletedDelegate == null)) {
                this.onAddGoodColumnRelationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddGoodColumnRelationCompleted);
            }
            base.InvokeAsync(this.onBeginAddGoodColumnRelationDelegate, new object[] {
                        param}, this.onEndAddGoodColumnRelationDelegate, this.onAddGoodColumnRelationCompletedDelegate, userState);
        }
        
        public bool AddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param) {
            return base.Channel.AddGoodColumnRelation(param);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddGoodColumnRelation(mba_application.MBAImportService.GoodColumnAddRelationParamDC param, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddGoodColumnRelation(param, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddGoodColumnRelation(System.IAsyncResult result) {
            return base.Channel.EndAddGoodColumnRelation(result);
        }
        
        private System.IAsyncResult OnBeginAddGoodColumnRelation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            mba_application.MBAImportService.GoodColumnAddRelationParamDC param = ((mba_application.MBAImportService.GoodColumnAddRelationParamDC)(inValues[0]));
            return this.BeginAddGoodColumnRelation(param, callback, asyncState);
        }
        
        private object[] OnEndAddGoodColumnRelation(System.IAsyncResult result) {
            bool retVal = this.EndAddGoodColumnRelation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddGoodColumnRelationCompleted(object state) {
            if ((this.AddGoodColumnRelationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddGoodColumnRelationCompleted(this, new AddGoodColumnRelationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddGoodColumnRelationAsync(mba_application.MBAImportService.GoodColumnAddRelationParamDC param) {
            this.AddGoodColumnRelationAsync(param, null);
        }
        
        public void AddGoodColumnRelationAsync(mba_application.MBAImportService.GoodColumnAddRelationParamDC param, object userState) {
            if ((this.onBeginAddGoodColumnRelationDelegate == null)) {
                this.onBeginAddGoodColumnRelationDelegate = new BeginOperationDelegate(this.OnBeginAddGoodColumnRelation);
            }
            if ((this.onEndAddGoodColumnRelationDelegate == null)) {
                this.onEndAddGoodColumnRelationDelegate = new EndOperationDelegate(this.OnEndAddGoodColumnRelation);
            }
            if ((this.onAddGoodColumnRelationCompletedDelegate == null)) {
                this.onAddGoodColumnRelationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddGoodColumnRelationCompleted);
            }
            base.InvokeAsync(this.onBeginAddGoodColumnRelationDelegate, new object[] {
                        param}, this.onEndAddGoodColumnRelationDelegate, this.onAddGoodColumnRelationCompletedDelegate, userState);
        }
    }
}
